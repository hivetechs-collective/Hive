{
  "name": "memory-analytics-automation",
  "description": "Automate actions based on memory and analytics events",
  "events": ["pattern_detected", "anomaly_detected", "threshold_exceeded"],
  "conditions": {
    "type": "and",
    "conditions": [
      {
        "type": "context_variable",
        "key": "confidence_score",
        "operator": "greater_than",
        "value": 0.85
      },
      {
        "type": "time_window",
        "start_time": "09:00",
        "end_time": "17:00",
        "days": ["monday", "tuesday", "wednesday", "thursday", "friday"],
        "timezone": "America/New_York"
      }
    ]
  },
  "actions": [
    {
      "type": "script",
      "language": "python",
      "content": "#!/usr/bin/env python3\nimport json\nimport os\n\n# Process the detected pattern or anomaly\nevent_data = json.loads(os.environ.get('HOOK_CONTEXT', '{}'))\npattern_type = event_data.get('pattern_type', 'unknown')\n\nif pattern_type == 'code_duplication':\n    print(f'Code duplication detected with {event_data.get(\"similarity_score\", 0)*100:.1f}% similarity')\nelif pattern_type == 'performance_regression':\n    print(f'Performance regression detected: {event_data.get(\"metric_name\")} degraded by {event_data.get(\"degradation_percent\", 0):.1f}%')\n"
    },
    {
      "type": "command",
      "command": "hive",
      "args": ["analytics", "report", "--type", "anomaly", "--format", "json"],
      "environment": {
        "HIVE_OUTPUT_DIR": "/tmp/hive-reports"
      }
    },
    {
      "type": "modify_context",
      "operation": "set",
      "key": "alert_triggered",
      "value": true
    }
  ],
  "security": {
    "require_approval": true,
    "allowed_commands": ["hive", "python3"],
    "max_execution_time": 300,
    "sandbox_mode": true
  },
  "metadata": {
    "author": "analytics-team",
    "version": "2.0.0",
    "tags": ["analytics", "memory", "automation", "alerts"]
  }
}