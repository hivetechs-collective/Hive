# PowerShell completion for Hive AI
# Generated by Hive AI Shell Integration

# Register the argument completer for the hive command
Register-ArgumentCompleter -Native -CommandName hive -ScriptBlock {
    param($commandName, $wordToComplete, $cursorPosition)
    
    $line = $wordToComplete
    $words = $line -split '\s+'
    $words = $words | Where-Object { $_ -ne '' }
    
    # If we only have 'hive', suggest main commands
    if ($words.Count -le 1) {
        return Get-HiveMainCommands | Where-Object { $_ -like "$wordToComplete*" }
    }
    
    $subcommand = $words[1]
    
    switch ($subcommand) {
        'analyze' { 
            if ($words[-2] -eq '--depth') {
                return @('quick', 'standard', 'comprehensive') | Where-Object { $_ -like "$wordToComplete*" }
            }
            if ($words[-2] -eq '--focus') {
                return @('architecture', 'quality', 'security', 'performance') | Where-Object { $_ -like "$wordToComplete*" }
            }
            return @('--depth', '--focus', '--output', '--dependencies', '--recommendations') | Where-Object { $_ -like "$wordToComplete*" }
        }
        'ask' {
            if ($words[-2] -eq '--profile') {
                return @('speed', 'balanced', 'cost', 'elite') | Where-Object { $_ -like "$wordToComplete*" }
            }
            return @('--profile', '--plan', '--context', '--max-tokens', '--stream') | Where-Object { $_ -like "$wordToComplete*" }
        }
        'shell' {
            return @('install', 'setup', 'status', 'completions', 'uninstall') | Where-Object { $_ -like "$wordToComplete*" }
        }
        'completion' {
            return @('bash', 'zsh', 'fish', 'powershell') | Where-Object { $_ -like "$wordToComplete*" }
        }
        default {
            return @('--help', '--version', '--verbose', '--quiet', '--format', '--no-color') | Where-Object { $_ -like "$wordToComplete*" }
        }
    }
}

function Get-HiveMainCommands {
    return @(
        [System.Management.Automation.CompletionResult]::new('analyze', 'analyze', 'ParameterValue', '🔍 Analyze and understand any repository'),
        [System.Management.Automation.CompletionResult]::new('ask', 'ask', 'ParameterValue', '🤖 Ask the AI consensus a question'),
        [System.Management.Automation.CompletionResult]::new('consensus', 'consensus', 'ParameterValue', '🎯 Run 4-stage consensus analysis'),
        [System.Management.Automation.CompletionResult]::new('plan', 'plan', 'ParameterValue', '📋 Enter planning mode for complex tasks'),
        [System.Management.Automation.CompletionResult]::new('execute', 'execute', 'ParameterValue', '⚡ Execute a previously created plan'),
        [System.Management.Automation.CompletionResult]::new('improve', 'improve', 'ParameterValue', '✨ Apply AI-suggested improvements'),
        [System.Management.Automation.CompletionResult]::new('search', 'search', 'ParameterValue', '🔎 Search for symbols in codebase'),
        [System.Management.Automation.CompletionResult]::new('memory', 'memory', 'ParameterValue', '🧠 Manage long-term memory'),
        [System.Management.Automation.CompletionResult]::new('analytics', 'analytics', 'ParameterValue', '📊 Generate analytics reports'),
        [System.Management.Automation.CompletionResult]::new('config', 'config', 'ParameterValue', '⚙️ Manage configuration settings'),
        [System.Management.Automation.CompletionResult]::new('trust', 'trust', 'ParameterValue', '🔒 Manage directory trust settings'),
        [System.Management.Automation.CompletionResult]::new('hooks', 'hooks', 'ParameterValue', '🪝 Manage enterprise hooks'),
        [System.Management.Automation.CompletionResult]::new('shell', 'shell', 'ParameterValue', '🔧 Manage shell integration'),
        [System.Management.Automation.CompletionResult]::new('status', 'status', 'ParameterValue', '📈 Show system status'),
        [System.Management.Automation.CompletionResult]::new('completion', 'completion', 'ParameterValue', '🐚 Generate shell completions'),
        [System.Management.Automation.CompletionResult]::new('self-update', 'self-update', 'ParameterValue', '🔄 Self-update Hive AI binary')
    )
}

# Professional aliases
Set-Alias -Name ha -Value 'hive analyze' -Description 'Quick analyze command'
Set-Alias -Name hq -Value 'hive ask' -Description 'Quick ask command'
Set-Alias -Name hp -Value 'hive plan' -Description 'Quick plan command'
Set-Alias -Name hs -Value 'hive search' -Description 'Quick search command'
Set-Alias -Name hst -Value 'hive status' -Description 'Quick status command'

Write-Host "✅ Hive AI PowerShell completions loaded successfully" -ForegroundColor Green