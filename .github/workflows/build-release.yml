name: Build Release DMG

on:
  push:
    branches:
      - 'release/**'
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - run: echo "probe ok"
  preflight:
    name: 01 Preflight
    runs-on: ubuntu-latest
    needs: setup
    outputs:
      release_ref: ${{ steps.meta.outputs.release_ref }}
    steps:
      - name: Derive metadata
        id: meta
        run: echo "release_ref=${GITHUB_REF#refs/heads/}" >> "$GITHUB_OUTPUT"
  build:
    name: 02 Build (macOS)
    runs-on: macos-latest
    needs: preflight
    defaults:
      run:
        working-directory: electron-poc
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm
          cache-dependency-path: electron-poc/package-lock.json
      - name: Install build prerequisites
        shell: bash
        run: |
          set -euo pipefail
          export HOMEBREW_NO_AUTO_UPDATE=1
          export HOMEBREW_NO_INSTALL_CLEANUP=1
          if ! command -v ttyd >/dev/null 2>&1; then brew install ttyd; fi
      - name: Install npm dependencies
        run: npm ci
      - name: Rebuild native modules
        run: npx electron-rebuild --force --only sqlite3,better-sqlite3,node-pty
      - name: Verify build requirements
        run: npm run requirements
      - name: Build production DMG (17 phases)
        env:
          CI: true
        run: npm run build:complete
      - name: Upload unsigned DMG
        uses: actions/upload-artifact@v4
        with:
          name: unsigned-dmg
          path: |
            electron-poc/out/make/*.dmg
            electron-poc/out/build-report.json
          if-no-files-found: error
      - name: Upload build logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: electron-poc/build-logs/**
          if-no-files-found: ignore
