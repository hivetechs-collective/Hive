name: Release

on:
  workflow_dispatch:
    inputs:
      channel:
        description: 'Release channel'
        required: true
        default: stable
        type: choice
        options:
          - stable
          - beta
          - nightly
  push:
    tags:
      - 'v*.*.*'

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: false

defaults:
  run:
    shell: bash

permissions:
  contents: write

jobs:
  release:
    name: Build, test & publish
    runs-on: macos-latest
    environment:
      name: production
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}
      AWS_REGION: auto
      AWS_DEFAULT_REGION: auto
      AWS_ENDPOINT_URL_S3: https://${{ secrets.R2_ACCOUNT_ID }}.r2.cloudflarestorage.com
      AWS_EC2_METADATA_DISABLED: 'true'
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm
          cache-dependency-path: electron-poc/package-lock.json

      - name: Install build prerequisites
        run: |
          set -euo pipefail
          export HOMEBREW_NO_AUTO_UPDATE=1
          export HOMEBREW_NO_INSTALL_CLEANUP=1
          if ! command -v ttyd >/dev/null 2>&1; then
            brew install ttyd
          fi

      - name: Install dependencies
        working-directory: electron-poc
        run: npm ci

      - name: Install Playwright browser
        working-directory: electron-poc
        run: npx playwright install chromium

      - name: Run release pipeline
        working-directory: electron-poc
        env:
          PLAYWRIGHT_REMOTE_DEBUG_PORT: '61323'
        run: ./scripts/release.sh ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.channel || 'stable' }}

      - name: Archive release artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: hive-release-${{ github.run_number }}
          path: |
            electron-poc/out/make/*.dmg
            electron-poc/out/build-report.json
          if-no-files-found: warn

      - name: Create GitHub release (tags only)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            electron-poc/out/make/*.dmg
            electron-poc/out/build-report.json
          draft: false
          prerelease: false
