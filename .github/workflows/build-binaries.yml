name: Build Binaries

on:
  workflow_dispatch:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: macos-latest
            target: x86_64-apple-darwin
            binary: hive-consensus
            artifact: hive-macos-x64
          - os: macos-latest
            target: aarch64-apple-darwin
            binary: hive-consensus
            artifact: hive-macos-arm64

    runs-on: ${{ matrix.os }}
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Install macOS OpenSSL dependencies
        if: matrix.os == 'macos-latest'
        shell: bash
        env:
          TARGET: ${{ matrix.target }}
        run: |
          set -euo pipefail
          install_x86_brew() {
            if [[ ! -x /usr/local/bin/brew ]]; then
              echo "Installing Rosetta Homebrew for x86_64..."
              sudo softwareupdate --install-rosetta --agree-to-license || true
              NONINTERACTIVE=1 arch -x86_64 /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
            fi
          }

          if [[ "$TARGET" == "x86_64-apple-darwin" ]]; then
            install_x86_brew
            arch -x86_64 /usr/local/bin/brew update
            arch -x86_64 /usr/local/bin/brew install openssl@3 pkg-config
            OPENSSL_PREFIX="$(arch -x86_64 /usr/local/bin/brew --prefix openssl@3)"
          else
            brew update
            brew install openssl@3 pkg-config
            OPENSSL_PREFIX="$(brew --prefix openssl@3)"
          fi
          echo "OPENSSL_DIR=$OPENSSL_PREFIX" >> "$GITHUB_ENV"
          echo "OPENSSL_INCLUDE_DIR=$OPENSSL_PREFIX/include" >> "$GITHUB_ENV"
          echo "OPENSSL_LIB_DIR=$OPENSSL_PREFIX/lib" >> "$GITHUB_ENV"
          echo "PKG_CONFIG_PATH=$OPENSSL_PREFIX/lib/pkgconfig" >> "$GITHUB_ENV"
          echo "PKG_CONFIG_PATH_x86_64_apple_darwin=$OPENSSL_PREFIX/lib/pkgconfig" >> "$GITHUB_ENV"
          echo "PKG_CONFIG_ALLOW_CROSS=1" >> "$GITHUB_ENV"
          echo "LIBRARY_PATH=$OPENSSL_PREFIX/lib" >> "$GITHUB_ENV"
          echo "LD_LIBRARY_PATH=$OPENSSL_PREFIX/lib" >> "$GITHUB_ENV"
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      
      - name: Build
        run: cargo build --bin hive-consensus --release --target ${{ matrix.target }}
      
      - name: Prepare artifact
        shell: bash
        run: |
          mkdir -p dist
          cp target/${{ matrix.target }}/release/${{ matrix.binary }} dist/${{ matrix.artifact }}
          
          # Make executable on Unix
          if [[ "${{ matrix.os }}" != "windows-latest" ]]; then
            chmod +x dist/${{ matrix.artifact }}
          fi
          
          # Generate checksum
          cd dist
          if command -v sha256sum > /dev/null; then
            sha256sum ${{ matrix.artifact }} > ${{ matrix.artifact }}.sha256
          else
            shasum -a 256 ${{ matrix.artifact }} > ${{ matrix.artifact }}.sha256
          fi
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact }}
          path: |
            dist/${{ matrix.artifact }}
            dist/${{ matrix.artifact }}.sha256

  create-universal-macos:
    needs: build
    runs-on: macos-latest
    
    steps:
      - name: Download macOS artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: hive-macos-*
          path: artifacts
          
      - name: Create universal binary
        run: |
          mkdir -p dist
          lipo -create \
            artifacts/hive-macos-x64/hive-macos-x64 \
            artifacts/hive-macos-arm64/hive-macos-arm64 \
            -output dist/hive-macos-universal
          chmod +x dist/hive-macos-universal
          
          # Generate checksum
          cd dist
          shasum -a 256 hive-macos-universal > hive-macos-universal.sha256
          
      - name: Upload universal binary
        uses: actions/upload-artifact@v4
        with:
          name: hive-macos-universal
          path: |
            dist/hive-macos-universal
            dist/hive-macos-universal.sha256
