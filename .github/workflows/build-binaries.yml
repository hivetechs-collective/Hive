name: Build Binaries

on:
  workflow_dispatch:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary: hive-consensus
            artifact: hive-linux-x64
            
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            binary: hive-consensus.exe
            artifact: hive-windows-x64.exe
            
          - os: macos-latest
            target: x86_64-apple-darwin
            binary: hive-consensus
            artifact: hive-macos-x64
            
          - os: macos-latest
            target: aarch64-apple-darwin
            binary: hive-consensus
            artifact: hive-macos-arm64

    runs-on: ${{ matrix.os }}
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Install dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libssl-dev \
            pkg-config \
            libgtk-3-dev \
            libwebkit2gtk-4.0-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            libsoup2.4-dev \
            libjavascriptcoregtk-4.0-dev
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      
      - name: Build
        run: cargo build --bin hive-consensus --release --target ${{ matrix.target }}
      
      - name: Prepare artifact
        shell: bash
        run: |
          mkdir -p dist
          cp target/${{ matrix.target }}/release/${{ matrix.binary }} dist/${{ matrix.artifact }}
          
          # Make executable on Unix
          if [[ "${{ matrix.os }}" != "windows-latest" ]]; then
            chmod +x dist/${{ matrix.artifact }}
          fi
          
          # Generate checksum
          cd dist
          if command -v sha256sum > /dev/null; then
            sha256sum ${{ matrix.artifact }} > ${{ matrix.artifact }}.sha256
          else
            shasum -a 256 ${{ matrix.artifact }} > ${{ matrix.artifact }}.sha256
          fi
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact }}
          path: |
            dist/${{ matrix.artifact }}
            dist/${{ matrix.artifact }}.sha256

  create-universal-macos:
    needs: build
    runs-on: macos-latest
    
    steps:
      - name: Download macOS artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: hive-macos-*
          path: artifacts
          
      - name: Create universal binary
        run: |
          mkdir -p dist
          lipo -create \
            artifacts/hive-macos-x64/hive-macos-x64 \
            artifacts/hive-macos-arm64/hive-macos-arm64 \
            -output dist/hive-macos-universal
          chmod +x dist/hive-macos-universal
          
          # Generate checksum
          cd dist
          shasum -a 256 hive-macos-universal > hive-macos-universal.sha256
          
      - name: Upload universal binary
        uses: actions/upload-artifact@v4
        with:
          name: hive-macos-universal
          path: |
            dist/hive-macos-universal
            dist/hive-macos-universal.sha256