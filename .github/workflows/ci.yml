name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

concurrency:
  group: ci-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  electron-verify:
    name: Electron Verify
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm
          cache-dependency-path: electron-poc/package-lock.json

      - name: Install dependencies
        working-directory: electron-poc
        run: npm ci

      - name: Static checks
        working-directory: electron-poc
        run: |
          npm run verify:all
          npm run lint

  ui-smoke:
    name: UI Smoke (macOS)
    runs-on: macos-latest
    needs: [electron-verify]
    if: >-
      ${{ github.event_name == 'push' ||
          (github.event_name == 'pull_request' &&
           contains(github.event.pull_request.labels.*.name, 'ui-smoke')) }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm
          cache-dependency-path: electron-poc/package-lock.json

      - name: Install macOS tooling
        run: |
          set -euo pipefail
          export HOMEBREW_NO_AUTO_UPDATE=1
          export HOMEBREW_NO_INSTALL_CLEANUP=1
          if ! command -v ttyd >/dev/null 2>&1; then
            brew install ttyd
          fi

      - name: Install dependencies
        working-directory: electron-poc
        run: npm ci

      - name: Install Playwright browser
        working-directory: electron-poc
        run: npx playwright install chromium

      - name: Build packaged app and run smoke tests
        working-directory: electron-poc
        env:
          PLAYWRIGHT_E2E: '1'
          PLAYWRIGHT_REMOTE_DEBUG_PORT: '61323'
          PLAYWRIGHT_RUN_TESTS: '1'
        run: npm run build:complete

      - name: Upload packaged artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: macos-dmg-${{ github.run_number }}
          path: |
            electron-poc/out/make/*.dmg
            electron-poc/out/build-report.json
          if-no-files-found: warn

  summary:
    name: CI Summary
    runs-on: ubuntu-latest
    needs: [electron-verify, ui-smoke]
    if: always()
    steps:
      - name: Write summary
        run: |
          fe="${{ needs.electron-verify.result }}"
          ui="${{ needs.ui-smoke.result || 'skipped' }}"

          function icon() {
            case "$1" in
              success) echo "✅" ;;
              skipped) echo "⚪" ;;
              *) echo "❌" ;;
            esac
          }

          {
            echo "## CI results"
            echo ""
            echo "- $(icon "$fe") Electron verify (${fe})"
            echo "- $(icon "$ui") UI smoke (${ui})"
          } >> "$GITHUB_STEP_SUMMARY"
